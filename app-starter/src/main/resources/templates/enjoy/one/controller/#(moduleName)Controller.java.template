/*
 *  @description: #(moduleName)Controller.java
 *
 *  @author:  #(author)
 *  @email: #(email)
 *  @version: #(version)
 *  @last update: #date(time, "yyyy-MM-dd HH:mm:ss")
 *  @date: #date(time, "yyyy-MM-dd HH:mm:ss")
 */

package #(packageName).#(entityPackage).#(moduleName.toLowerCase()).controller;

import com.wxs.code.core.controller.BaseController;
import com.wxs.code.core.controller.CoreController;
import #(packageName).#(entityPackage).#(moduleName.toLowerCase()).entity.#(moduleName);
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.models.annotations.OpenAPI30;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;


@OpenAPI30
@RestController
@RequestMapping("/#(entityPackage)/#(moduleName.toLowerCase())")
@Tag(name = "#(remark)", description = "#(entityPackage)模块-#(remark)")
public class #(moduleName)Controller extends CoreController<#(moduleName)>{


    /**
     * 查询接口
     *
     * @param entity 实例参数化
     * @param req    http请求
     * @return
     */
    @GetMapping("list")
    @Operation(summary = "获取列表")
    @CheckPermission(module = "#(entityPackage)", type = "#(table):list")
    protected RspMsg<List<#(moduleName)>> list(#(moduleName) entity, HttpServletRequest req) {
        return super.list(entity, req);
    }

    /**
     * 分页查询
     *
     * @param entity   实例参数化
     * @param pageNo   当前页
     * @param pageSize 分页大小
     * @param req      http请求
     * @return
     */
    @GetMapping("pagelist")
    @Operation(summary = "获取分页列表")
    @CheckPermission(module = "#(entityPackage)", type = "#(table):queryPageList")
    protected RspMsg<IPage<#(entityPackage)>> queryPageList(#(entityPackage) entity, Integer pageNo, Integer pageSize, HttpServletRequest req) {
        return super.queryPageList(entity, pageNo, pageSize, req);
    }

    /**
     * 根据ID查询数据
     *
     * @param id  实例id
     * @param req http请求
     * @return
     */
    @GetMapping("queryById")
    @Operation(operationId = "根据ID查询数据", summary = "根据ID查询数据")
    @CheckPermission(module = "#(entityPackage)", type = "#(table):queryById")
    protected RspMsg<#(entityPackage)> queryById(String id, HttpServletRequest req) {
        return super.queryById(id, req);
    }

    /**
     * 批量删除
     *
     * @param ids 实例id集合
     *            eg: 1,2,3,4
     * @return
     */
    @Operation(summary = "批量删除")
    @DeleteMapping(value = "/deleteBatch")
    @CheckPermission(module = "#(entityPackage)", type = "#(table):deleteBatch")
    protected RspMsg<String> deleteBatch(String ids) {
        return super.deleteBatch(ids);
    }

    /**
     * 删除数据
     *
     * @param id 实例id
     * @return
     */
    @Operation(summary = "通过id删除")
    @DeleteMapping(value = "/delete")
    @CheckPermission(module = "#(entityPackage)", type = "#(table):delete")
    protected RspMsg<String> delete(String id) {
        return super.delete(id);
    }

    /**
     * 编辑数据
     *
     * @param entity 实例参数，需要传入id
     * @param req    http请求
     * @return
     */
    @Operation(operationId = "单行编辑", summary = "单行编辑")
    @RequestMapping(value = "/edit", method = {RequestMethod.PUT, RequestMethod.POST})
    @CheckPermission(module = "#(entityPackage)", type = "#(table):edit")
    protected RspMsg<String> edit(#(entityPackage) entity, HttpServletRequest req) {
        return super.edit(entity, req);
    }

    /**
     * 单行新增
     *
     * @param entity 实例参数
     * @param req    http请求
     * @return
     */
    @Operation(summary = "单行新增")
    @RequestMapping(value = "/add", method = {RequestMethod.PUT, RequestMethod.POST})
    @CheckPermission(module = "#(entityPackage)", type = "#(table):add")
    protected RspMsg<String> add(#(entityPackage) entity, HttpServletRequest req) {
        return super.add(entity, req);
    }

    /**
     * 批量新增
     *
     * @param entity 实例参数集合
     * @param req
     * @return
     */
    @Operation(summary = "批量新增")
    @RequestMapping(value = "/addBatch", method = {RequestMethod.PUT, RequestMethod.POST})
    @CheckPermission(module = "#(entityPackage)", type = "#(table):addBatch")
    protected RspMsg<String> addBatch(List<#(entityPackage)> entity, HttpServletRequest req) {
        return super.addBatch(entity, req);
    }

}
