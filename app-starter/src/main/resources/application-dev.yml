app:
  server:
    host: 127.0.0.1

  login:
    github:
      client_id: XXXXXXXXXXXXXXXXXX
      client_secret: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  # 调试模式配置
  debug:
    enable: false # 开启调试模式

  redis:
    host: 127.0.0.1
    port: 6379
    password: band@redis123
    database: 3



server:
  port: 28080

spring:
  application:
    name: app-starter

  datasource:
    url: jdbc:mysql://${app.server.host}:3306/app-server?useUnicode=true&characterEncoding=utf8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai
    username: bandlink
    password: band@123
    driver-class-name: com.mysql.cj.jdbc.Driver
  redis:
    redisson:
      config: |
        singleServerConfig:  # https://redisson.org/docs/configuration/#single-yaml-config-format
            password: ${app.redis.password}  # Redis 服务器密码，如果不需要密码则设置为 null
            clientName: APP_REDIS_SERVER  # 客户端名称，可以为空
            address: "redis://${app.redis.host}:${app.redis.port}"  # Redis 服务器的地址
            subscriptionConnectionMinimumIdleSize: 1  # 订阅连接的最小空闲连接数
            subscriptionConnectionPoolSize: 50  # 订阅连接池大小
            connectionMinimumIdleSize: 24  # 普通连接的最小空闲连接数
            connectionPoolSize: 64  # 普通连接池大小
            database: ${app.redis.database}  # 使用的 Redis 数据库编号

#mybatis plus 设置
mybatis-plus:
  #  mapper-locations: classpath*:com/wxs/code/**/xml/*Mapper.xml
  global-config:
    # 关闭MP3.0自带的banner
    banner: false
    db-config:
      #主键类型  0:"数据库ID自增",1:"该类型为未设置主键类型", 2:"用户输入ID",3:"全局唯一ID (数字类型唯一ID)", 4:"全局唯一ID UUID",5:"字符串全局唯一ID (idWorker 的字符串表示)";
      id-type: ASSIGN_ID
      # 默认数据库表下划线命名
      table-underline: true
  configuration:
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    #    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    # 返回类型为Map,显示null对应的字段
    call-setters-on-nulls: true


# springdoc-openapi项目配置
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
  group-configs:
    - group: 'A_system'
      displayName: '内部接口'
      paths-to-match: '/*/**'
      packages-to-scan:
        - com.wxs.code.system
        - com.wxs.code.schedule
        - com.wxs.code.generate
        - com.wxs.code.biz
    - group: 'B_default'
      displayName: '默认'
      paths-to-match: '/*/**'
      packages-to-scan: com.wxs.code
    - group: 'C_api'
      displayName: '对外接口'
      paths-to-match: '/*/**'
      packages-to-scan: com.wxs.code.api

  default-flat-param-object: true
# knife4j的增强配置，不需要增强可以不配
knife4j:
  enable: true
  # 开启Swagger的Basic认证功能,默认是false
  basic:
    enable: true
    # Basic认证用户名
    username: test
    # Basic认证密码
    password: test
  setting:
    language: zh_cn
  documents:
    - group: system
      name: 接口补充文档
      # 某一个文件夹下所有的.md文件
      locations: classpath:markdown/system/*.md
    - group: api
      name: 接口补充文档
      # 某一个文件夹下所有的.md文件
      locations: classpath:markdown/api/*.md
    - group: default
      name: 接口补充文档
      # 某一个文件夹下所有的.md文件
      locations: classpath:markdown/default/*.md



############## Sa-Token 配置 (文档: https://sa-token.cc) ##############
sa-token:
  # token 名称（同时也是 cookie 名称）
  token-name: X-Auth-Token
  # token 有效期（单位：秒） 默认30天，-1 代表永久有效
  timeout: 2592000
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1  # 半小时
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: true
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: uuid
  # 是否输出操作日志
  is-log: true